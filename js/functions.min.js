/* Smoke.js */
(function(e,t){var n={smoketimeout:[],init:false,zindex:1e3,i:0,bodyload:function(e){var r=t.createElement("div");r.setAttribute("id","smoke-out-"+e);r.className="smoke-base";r.style.zIndex=9999999;n.zindex++;t.body.appendChild(r)},newdialog:function(){var t=(new Date).getTime();t=Math.random(1,99)+t;if(!n.init){n.listen(e,"load",function(){n.bodyload(t)})}else{n.bodyload(t)}return t},forceload:function(){},build:function(t,r){n.i++;r.stack=n.i;t=t.replace(/\n/g,"<br />");t=t.replace(/\r/g,"<br />");var i="",s="OK",o="Cancel",u="",a="",f;if(r.type==="prompt"){i='<div class="dialog-prompt">'+'<input id="dialog-input-'+r.newid+'" type="text" '+(r.params.value?'value="'+r.params.value+'"':"")+" />"+"</div>"}if(r.params.ok){s=r.params.ok}if(r.params.cancel){o=r.params.cancel}if(r.params.classname){u=r.params.classname}if(r.type!=="signal"){a='<div class="dialog-buttons">';if(r.type==="alert"){a+='<button id="alert-ok-'+r.newid+'">'+s+"</button>"}else if(r.type==="quiz"){if(r.params.button_1){a+='<button class="quiz-button" id="'+r.type+"-ok1-"+r.newid+'">'+r.params.button_1+"</button>"}if(r.params.button_2){a+='<button class="quiz-button" id="'+r.type+"-ok2-"+r.newid+'">'+r.params.button_2+"</button>"}if(r.params.button_3){a+='<button class="quiz-button" id="'+r.type+"-ok3-"+r.newid+'">'+r.params.button_3+"</button>"}if(r.params.button_cancel){a+='<button id="'+r.type+"-cancel-"+r.newid+'" class="cancel">'+r.params.button_cancel+"</button>"}}else if(r.type==="prompt"||r.type==="confirm"){if(r.params.reverseButtons){a+='<button id="'+r.type+"-ok-"+r.newid+'">'+s+"</button>"+'<button id="'+r.type+"-cancel-"+r.newid+'" class="cancel">'+o+"</button>"}else{a+='<button id="'+r.type+"-cancel-"+r.newid+'" class="cancel">'+o+"</button>"+'<button id="'+r.type+"-ok-"+r.newid+'">'+s+"</button>"}}a+="</div>"}f='<div id="smoke-bg-'+r.newid+'" class="smokebg"></div>'+'<div class="dialog smoke '+u+'">'+'<div class="dialog-inner">'+t+i+a+"</div>"+"</div>";if(!n.init){n.listen(e,"load",function(){n.finishbuild(t,r,f)})}else{n.finishbuild(t,r,f)}},finishbuild:function(e,r,i){var s=t.getElementById("smoke-out-"+r.newid);s.className="smoke-base smoke-visible  smoke-"+r.type;s.innerHTML=i;while(s.innerHTML===""){s.innerHTML=i}if(n.smoketimeout[r.newid]){clearTimeout(n.smoketimeout[r.newid])}n.listen(t.getElementById("smoke-bg-"+r.newid),"click",function(){n.destroy(r.type,r.newid);if(r.type==="prompt"||r.type==="confirm"||r.type==="quiz"){r.callback(false)}else if(r.type==="alert"&&typeof r.callback!=="undefined"){r.callback()}});switch(r.type){case"alert":n.finishbuildAlert(e,r,i);break;case"confirm":n.finishbuildConfirm(e,r,i);break;case"quiz":n.finishbuildQuiz(e,r,i);break;case"prompt":n.finishbuildPrompt(e,r,i);break;case"signal":n.finishbuildSignal(e,r,i);break;default:throw"Unknown type: "+r.type}},finishbuildAlert:function(r,i,s){n.listen(t.getElementById("alert-ok-"+i.newid),"click",function(){n.destroy(i.type,i.newid);if(typeof i.callback!=="undefined"){i.callback()}});t.onkeyup=function(t){if(!t){t=e.event}if(t.keyCode===13||t.keyCode===32||t.keyCode===27){n.destroy(i.type,i.newid);if(typeof i.callback!=="undefined"){i.callback()}}}},finishbuildConfirm:function(r,i,s){n.listen(t.getElementById("confirm-cancel-"+i.newid),"click",function(){n.destroy(i.type,i.newid);i.callback(false)});n.listen(t.getElementById("confirm-ok-"+i.newid),"click",function(){n.destroy(i.type,i.newid);i.callback(true)});t.onkeyup=function(t){if(!t){t=e.event}if(t.keyCode===13||t.keyCode===32){n.destroy(i.type,i.newid);i.callback(true)}else if(t.keyCode===27){n.destroy(i.type,i.newid);i.callback(false)}}},finishbuildQuiz:function(r,i,s){var o,u,a;n.listen(t.getElementById("quiz-cancel-"+i.newid),"click",function(){n.destroy(i.type,i.newid);i.callback(false)});if(o=t.getElementById("quiz-ok1-"+i.newid))n.listen(o,"click",function(){n.destroy(i.type,i.newid);i.callback(o.innerHTML)});if(u=t.getElementById("quiz-ok2-"+i.newid))n.listen(u,"click",function(){n.destroy(i.type,i.newid);i.callback(u.innerHTML)});if(a=t.getElementById("quiz-ok3-"+i.newid))n.listen(a,"click",function(){n.destroy(i.type,i.newid);i.callback(a.innerHTML)});t.onkeyup=function(t){if(!t){t=e.event}if(t.keyCode===27){n.destroy(i.type,i.newid);i.callback(false)}}},finishbuildPrompt:function(r,i,s){var o=t.getElementById("dialog-input-"+i.newid);setTimeout(function(){o.focus();o.select()},100);n.listen(t.getElementById("prompt-cancel-"+i.newid),"click",function(){n.destroy(i.type,i.newid);i.callback(false)});n.listen(t.getElementById("prompt-ok-"+i.newid),"click",function(){n.destroy(i.type,i.newid);i.callback(o.value)});t.onkeyup=function(t){if(!t){t=e.event}if(t.keyCode===13){n.destroy(i.type,i.newid);i.callback(o.value)}else if(t.keyCode===27){n.destroy(i.type,i.newid);i.callback(false)}}},finishbuildSignal:function(r,i,s){t.onkeyup=function(t){if(!t){t=e.event}if(t.keyCode===27){n.destroy(i.type,i.newid);if(typeof i.callback!=="undefined"){i.callback()}}};n.smoketimeout[i.newid]=setTimeout(function(){n.destroy(i.type,i.newid);if(typeof i.callback!=="undefined"){i.callback()}},i.timeout)},destroy:function(e,r){var i=t.getElementById("smoke-out-"+r);if(e!=="quiz"){var s=t.getElementById(e+"-ok-"+r)}var o=t.getElementById(e+"-cancel-"+r);i.className="smoke-base";if(s){n.stoplistening(s,"click",function(){});t.onkeyup=null}if(e==="quiz"){var u=t.getElementsByClassName("quiz-button");for(var a=0;a<u.length;a++){n.stoplistening(u[a],"click",function(){});t.onkeyup=null}}if(o){n.stoplistening(o,"click",function(){})}n.i=0;i.innerHTML=""},alert:function(e,t,r){if(typeof r!=="object"){r=false}var i=n.newdialog();n.build(e,{type:"alert",callback:t,params:r,newid:i})},signal:function(e,t,r){if(typeof r!=="object"){r=false}var i=5e3;if(r.duration!=="undefined"){i=r.duration}var s=n.newdialog();n.build(e,{type:"signal",callback:t,timeout:i,params:r,newid:s})},confirm:function(e,t,r){if(typeof r!=="object"){r=false}var i=n.newdialog();n.build(e,{type:"confirm",callback:t,params:r,newid:i})},quiz:function(e,t,r){if(typeof r!=="object"){r=false}var i=n.newdialog();n.build(e,{type:"quiz",callback:t,params:r,newid:i})},prompt:function(e,t,r){if(typeof r!=="object"){r=false}var i=n.newdialog();return n.build(e,{type:"prompt",callback:t,params:r,newid:i})},listen:function(e,t,n){if(e.addEventListener){return e.addEventListener(t,n,false)}if(e.attachEvent){return e.attachEvent("on"+t,n)}return false},stoplistening:function(e,t,n){if(e.removeEventListener){return e.removeEventListener(t,n,false)}if(e.detachEvent){return e.detachEvent("on"+t,n)}return false}};n.init=true;if(typeof module!="undefined"&&module.exports){module.exports=n}else if(typeof define==="function"&&define.amd){define("smoke",[],function(){return n})}else{this.smoke=n}})(window,document);

getUniqueId = function () {
	var dateObject = new Date();
	var uniqueId =
		dateObject.getFullYear() + '' +
		dateObject.getMonth() + '' +
		dateObject.getDate() + '' +
		dateObject.getTime();
	return uniqueId;
};
function popupOpen(id) {
		$(id +" .popup-container").css("top","200%");
		$(id).fadeIn(300);

		$(id +" .popup-container").animate({
				top: "40%"
		}, 500, function() {

				$( ".popup-container" ).animate({
						top: "50%"
				}, 500, function() {

				});
		});
}

function popupClose(id) {
		$(id +" .popup-container").animate({
				top: "60%"
		}, 500, function() {

				$(id).fadeOut(500);

				$(id+" .popup-container").animate({
						top: "-300%"
				}, 500, function() {

				});
		});
}

function changePaymentMethod(pm, holder) {
		$(".payment-method").removeClass("active");
		$(".pm-"+pm).addClass("active");
		if(pm == 'pay_inter'){
				$("#form-deposit").prop("action", "https://sci.interkassa.com/");
		}else{
			 $('#pm').val(pm);
			$("#form-deposit").prop("action", "/pay");
		}
		$("#withdrawal-type-field").val(pm);

		if (holder != undefined) {
				document.getElementsByClassName('PurseHolder')[0].placeholder=holder;
		}
}


function depositNow() {
		$("#form-deposit").submit();
}

/* Only numbers in field */
function OnlyNumber(evt) {
    var theEvent = evt || window.event;
    var key = theEvent.keyCode || theEvent.which;
    key = String.fromCharCode( key );
    var regex = /[0-9]|\./;
    if ( !regex.test(key) ) {
        theEvent.returnValue = false;
        if (theEvent.preventDefault)
            theEvent.preventDefault();
    }
}

function lgAction() {
	if($('.ulogin-button-vkontakte').length > 0) {
		$('.ulogin-button-vkontakte').trigger('click');
	} else {
		$('.ulogin-button-facebook').trigger('click');
	}
}

function lgpAction() {
	$(".loginUI-size").subscribeBetter({
	  animation: "flyInUp",
	  delay: 0,
	  showOnce: false,
	  autoClose: false,
	  scrollableModal: false
	});
}

function ActiveGame(level,bet_type) {
	var arrow_pos = {1:480,2:430,3:380,4:330,5:280,6:230,7:180,8:130,9:80,10:30};

	$('.game .control').hide();
	$('.game .play-btn').hide();
	$('.game .control-active').show();
	$('.game .game-end').show();
	$('.game .control-active').show();
	$('.game .game-end').show();
	$('.game ul.list li.lev_'+level).addClass('hover');
	$('.arrow-step-left,.arrow-step-right').css('margin-top',arrow_pos[level]+'px');
	$('.arrow-step-left').show();
	$('.arrow-step-right').show();
	$('.tooltip_demo').hide();

	if(bet_type == 1) {
		$('.tooltip_demo').show();
	}

	$('.game-type li').css('cursor','not-allowed');
	$('.game-type li').addClass('not-allowed');

	$('.game-type li.active').removeClass('not-allowed');
	$('.game-type li.active').css('cursor','default');

	if(level >= 10)  {
		$('.arrow-step-left').hide();
		$('.arrow-step-right').hide();
	}

	// if level up
	if(game_bet_take > 0) {
		$('.game-end').html(lang_conf['game-take'] + "suka");
	} else {
		$('.game-end').html(lang_conf['game-end']);
	}
}
function GameEnd(typ) {
	if(typ == 1){
		$('.game .control').show();
		$('.game .play-btn').show();
		$('.game .control-active').hide();
		$('.game .game-end').hide();
		$('.game ul.list li').removeClass('hover');
		$('.arrow-step-left').hide();
		$('.arrow-step-right').hide();
		$('.tooltip_demo').hide();
		$('.demo-play').hide();
		$('.game-type li').css('cursor','pointer');
		$('.game-type li').removeClass('not-allowed');
	}else{
		$('.game-type li').css('cursor','pointer');
		$('.game-type li').removeClass('not-allowed');
		$('.game .control').show();
		$('.game .play-btn').show();
		$('.game .control-active').hide();
		$('.game .game-end').hide();
		$('.game ul.list li').removeClass('hover');
		$('.arrow-step-left').hide();
		$('.arrow-step-right').hide();
		$('.tooltip_demo').hide();
		$('.demo-play').show();
			$('.demo-play').fadeIn();
	}
}
$.startTimer = function (sec) {
	if (sec > 0) {
		var hours   = Math.floor(sec / 3600);
		var minutes = Math.floor((sec - hours * 3600) / 60);
		minutes     = (minutes > 0 ? minutes : 0)
		var seconds = sec - (minutes * 60 + hours * 3600);
		seconds = (seconds > 0 ? seconds : 0);
		var seconds_text = (seconds < 10 ? '0' + seconds : seconds);
		var minutes_text = (minutes < 10 ? '0' + minutes : minutes);
		var hours_text   = (hours   < 10 ? '0' + hours   : hours);

		$('#timer').html(hours_text + ':' + minutes_text + ':' + seconds_text);

		timer_interval = setInterval(function() {
				if (hours > 0 && minutes > 0 && seconds > 0) {
					seconds --;
				} else {
					if (hours <= 0 && minutes <= 0 && seconds <= 0) {
						clearInterval(timer_interval);
						return;
					} else {
						if (hours > 0 && minutes <= 0 && seconds <= 0) {
							hours--;
							minutes = 59;
							seconds = 59;
						} else {
							if (minutes > 0 && seconds <= 0) {
								minutes--;
								seconds = 59;
							} else {
								seconds--;
							}
						}
					}
				}
				seconds_text = (seconds < 10 ? '0' + seconds : seconds);
				minutes_text = (minutes < 10 ? '0' + minutes : minutes);
				hours_text   = (hours < 10 ? '0'   + hours   : hours);
					$('#timer').html(hours_text + ':' + minutes_text + ':' + seconds_text);
		}, 1000);
	} else {
		$('#timer').html("00:00");
	}
}
if(time != null){
	$.startTimer(time);
}
/****************************************
* Init functions after ready of page
*****************************************/
$(document).ready(function(){
	var socket = io.connect(':2020',{rememberTransport: false});
		var PageName = 'support';
	if($(".game").length) {
		PageName = 'main';
	}
socket.emit('faka');
	// not allowed bet more than balance
	$("input.betInp").keyup(function(e) {
       var sum = parseFloat($(this).val().replace('₽','')).toFixed(2);

       if(sum > conf_vars['max-bet']) {
	       $(this).val('₽'+conf_vars['min-bet']);
       }
	   game_build();
    });
	/* Get last one jet */
    socket.on('last gift get jet', function (data_gift) {

				if(data_gift.profit <= 0){
					var live_gift = '<div class="list"><div class="player">' +  data_gift.nick +'</div><div class="bet">'+data_gift.bet +' <i class="flaticon-ruble"></i></div><div class="profit" style="color: red; font-weight: bold;">'+'-'+data_gift.bet+' <i class="flaticon-ruble"></i></div><div class="step">'+data_gift.level+' </div><div class="difficult"><img src="/assets/images/' + data_gift.mode + '-mode.svg" /></div></div>';

				}else{
					var live_gift = '<div class="list"><div class="player">' +  data_gift.nick +'</div><div class="bet">'+data_gift.bet +' <i class="flaticon-ruble"></i></div><div class="profit" style="color: yellow; font-weight: bold;">'+data_gift.profit+' <i class="flaticon-ruble"></i></div><div class="step">'+data_gift.level+' </div><div class="difficult"><img src="/assets/images/' + data_gift.mode + '-mode.svg" /></div></div>';

				}
        $("#afk").prepend(live_gift);
        $('#afk').last().remove();

    });


		/* Get last jet list */
    socket.on('last gifts jet', function (data_gifts) {
        var data_g = '';
        var live_gifts_list = '';
        $.each(data_gifts, function(i) {
            data_lgift = data_gifts[i];
            if (data_lgift['user'] != undefined) {
							if(data_lgift['profit'] > 0 ){
								  live_gifts_list += '<div class="list"><div class="player">' + data_lgift['nick']+'</div><div class="bet">'+data_lgift['bet']+' <i class="flaticon-ruble"></i></div><div class="profit"  style="    color: #69c014; font-weight: bold;">'+data_lgift['profit']+'<i class="flaticon-ruble"></i></div><div class="step">'+data_lgift['level']+'</div><div class="difficult"><img src="/assets/images/' + data_lgift['mode'] + '-mode.svg" /></div></div>';
							}else{
								  live_gifts_list += '<div class="list"><div class="player">' + data_lgift['nick']+'</div><div class="bet">'+data_lgift['bet']+' <i class="flaticon-ruble"></i></div><div class="profit"  style="color: #ff3333; font-weight: bold;">'+ '-'+data_lgift['bet']+'<i class="flaticon-ruble"></i></div><div class="step">'+data_lgift['level']+'</div><div class="difficult"><img src="/assets/images/' + data_lgift['mode'] + '-mode.svg" /></div></div>';
							}
            }
        });
        $("#afk").html(live_gifts_list);
    });
			window.statbox = {'online':0, 'total':0, 'games':0, 'users':0};

	socket.on('statbox33', function (data_statbox) {


			if (window.statbox['total'] != data_statbox[1]) {
					$('#st-total').html(data_statbox[1]);
					window.statbox['total'] = data_statbox[1];
			}

			if (window.statbox['games'] != data_statbox[2]) {
					$('#st-games').html(data_statbox[2]);
					window.statbox['games'] = data_statbox[2];
			}
			if (window.statbox['online'] != data_statbox[0]) {
					$('#st-online').html(data_statbox[0]);
					window.statbox['online'] = data_statbox[0];
			}

	});
	// demo-play close
	$('.demo-play .close').click(function() {
		$('.demo-play').fadeOut();
	});
	$('#arcticmodal').click(function() {
		$('.demo-play').fadeOut();
	});
	$('#asas').click(function() {
	$('#prof').arcticmodal();
	});
	$('#asas1').click(function() {
	$('#prof').arcticmodal();
	});
	$('#asas3').click(function() {
	$('#prof').arcticmodal();
	});
	$('#asas2').click(function() {
		$(".aboutUI").subscribeBetter({
			animation: "flyInUp",
			delay: 0,
			showOnce: false,
			autoClose: false,
			scrollableModal: false
		});
	});


	$('body').on('click', '.mob_menu_button', function(){
 				$('.mob_menu').addClass('open');
 				$('.owerlay').show();
 		   });

 		   $('.owerlay').on('click', function(){
 				$('.mob_menu').removeClass('open');
 				$('.owerlay').hide();
 		   });


	// play demo button click
	$('.play-demo').click(function() {
		$('.demo-play').fadeOut();
		$('.play-btn.play-start').trigger('click');
	});
	$(".modal5 .nav ul li:nth-child(1) a").on('click', function() {
					$(".modal5 .nav ul li").removeClass('active');
					$(this).parent().addClass('active');
					$('.modal5 .tab').removeClass('active');
					$('.modal5 .tab1').addClass('active');
					return false;
			   });
				$(".modal5 .nav ul li:nth-child(2) a").on('click', function() {
					$(".modal5 .nav ul li").removeClass('active');
					$(this).parent().addClass('active');
					$('.modal5 .tab').removeClass('active');
					$('.modal5 .tab2').addClass('active');
					return false;
			   });
				$(".modal5 .nav ul li:nth-child(3) a").on('click', function() {
					$(".modal5 .nav ul li").removeClass('active');
					$(this).parent().addClass('active');
					$('.modal5 .tab').removeClass('active');
					$('.modal5 .tab3').addClass('active');
					return false;
			   });
				$(".modal5 .nav ul li:nth-child(5) a").on('click', function() {
					$(".modal5 .nav ul li").removeClass('active');
					$(this).parent().addClass('active');
					$('.modal5 .tab').removeClass('active');
					$('.modal5 .tab4').addClass('active');
					return false;
			   });
				$(".modal5 .nav ul li:nth-child(4) a").on('click', function() {
					$(".modal5 .nav ul li").removeClass('active');
					$(this).parent().addClass('active');
					$('.modal5 .tab').removeClass('active');
					$('.modal5 .tab5').addClass('active');
					return false;
			   });

	// deposit button click
	$('.deposit-demo').click(function() {
  		$('#paymentModal').arcticmodal();
	});

	// deposit button click
	$('.free-demo').click(function() {
		$('.demo-play').fadeOut();
		$('.free-money').trigger('click');
	});


	$('.settingsUI .tabs li').click(function() {
		$('.settingsUI .tab').hide();
		$('.settingsUI .tabs li').removeClass('active');

		$(this).addClass('active');
		$('.settingsUI .tab.t-'+$(this).attr('data-url')).show();
		if(!$('.t-transactions table').length) {
			$.post('/api/transactions', '', function(e) {
				$('.t-transactions').html('<table><tr class="head"><td>ID</td><td>Type</td><td>Payment Method</td><td>Amount</td><td>DateTime</td><td>Status</td></tr>'+e+'</table>');
			});
		}
	});


	// verify-result
	$('.verify-result').click(function() {
		$(".verifyUI").subscribeBetter({
		  animation: "flyInUp",
		  delay: 0,
		  showOnce: false,
		  autoClose: false,
		  scrollableModal: false
		});

		$('.verifyUI .hash input').val($('.verify-b .current .hash textarea').val());
		$('.verifyUI .server input').val($('.verify-b .current .server-seed textarea').val());
		$('.verifyUI .number input').val($('.verify-b .current .number textarea').val());
		$('.verifyUI .return input').val($('.verify-b .current .result textarea').val());
	});

function getMobileOperatingSystem() {
  var userAgent = navigator.userAgent || navigator.vendor || window.opera;

  if( userAgent.match( /iPad/i ) || userAgent.match( /iPhone/i ) || userAgent.match( /iPod/i ) )
  {
    return 'iOS';

  }
  else if( userAgent.match( /Android/i ) )
  {

    return 'Android';
  }
  else
  {
    return 'unknown';
  }
}


		if(getCookie('sound') == 'off') {
			$('.sound i').addClass('flaticon-sound-off');
			$('.sound i').removeClass('flaticon-sound-on on');
		}else{
			$('.sound i').removeClass('flaticon-sound-off');
			$('.sound i').addClass('flaticon-sound-on on');
		}
//VALODAS
		// if(getCookie('lang') == 'ru') {
		// 	var id = window.location.href;
		// var lastChar = id.substr(id.length - 2); // => "1"
		// if(lastChar == "ru"){
		//
		// }else{
		// 		location.href= '/ru';
		// }
		// }else if(getCookie('lang') == 'en') {
		// 	var id = window.location.href;
		// var lastChar = id.substr(id.length - 2); // => "1"
		// if(lastChar == "en"){
		//
		// }else{
		// 	location.href= '/en';
		// }
		// }
	// start game
	$('.play-btn.play-start').click(function() {
		if($(this).find('.loading').css('display') != 'none') {
			return;
		}
		if(getCookie('sound') != 'off' && getMobileOperatingSystem() != 'iOS') {
				click_sound.playclip();
		}
		game_build();
		$(this).find('.loading').show();

		$('.control-active').html($('input.betInp').val());
		// Send Bet
		var demo_type = 1;
		socket.emit('newbet', { user: login, mode: $('.game-type li.active').attr('data-url'), bet: $('input.betInp').val().replace('₽','')});
		// answer when ticket generated and wait game

		socket.on('newbet2', function(msg){
			if(msg.user == login) {
			if(msg.start == 1) {
				if(msg.banka == 0){
					ActiveGame(1,1);
					$('.verify-b .current .hash textarea').val(msg.hash);
						$('.verify-b .current .number textarea').val(msg.seed);
							$('.verify-b .current .server-seed textarea').val(msg.seed2);
								$('.verify-b .current .client-seed textarea').val(msg.seed3);
				}else{
									socket.emit('updateBalance', {user: login});
					$('.verify-b .current .hash textarea').val(msg.hash);
						$('.verify-b .current .number textarea').val(msg.seed);
							$('.verify-b .current .server-seed textarea').val(msg.seed2);
								$('.verify-b .current .client-seed textarea').val(msg.seed3);
					ActiveGame(1,msg.mode);
				}
			}else{
					$(this).find('.loading').hide();
			}
			if(msg.denied_attempt == 1) {
				smoke.alert('Слишком много попыток сделать ставку, подождите 10 секунд', function(e){
					}, {
					ok: "Cancel",
					cancel: "Nope",
					classname: "custom-class"
				});
				$(this).find('.loading').hide();
			}
		}
		});
	});

		socket.on('balanceerror', function(msg){
				$('.play-btn').find('.loading').hide();
			if(msg.user == login){
				smoke.alert(msg.error, function(e){
					}, {
					ok: "Cancel",
					cancel: "Nope",
					classname: "custom-class"
				});
			}
		});
		socket.on('updateBalance2', function(data){
			if(data.user2 == login){
				$('.balance .v').html(data.balance);
					socket.emit('last gift set jet');
			}
		});
	// end game
	$('.play-btn.game-end').click(function() {
		$('.game .loading').show();
		// Send Bet
		socket.emit('takemoney', {user: login});
		// answer when ticket generated and wait game

		socket.on('takemoney2', function(data){ //TODO once
			if(data.user == login) {
				  socket.emit('force2', {user: login});
				var s = data.fields_seed;
				var fields_seeds = s;
				$('.game ul.list li').each(function() {
					var class_id = $(this).attr('data-url');
					var position = class_id.split('_');
					if(!class_id.match('game-over')) {
							if(fields_seeds[position[1]-1]['steps'][position[2]-1] == 1) {
							$(this).addClass('icon');
							$(this).html('<img src="/assets/images/'+data.mode+'-mode.svg" />');
						}
					}
				});
				socket.emit('updateBalance', {user: login});
				$('.game .loading').hide();
				GameEnd(data.banka);
			}
					socket.emit('last gift set jet');
		});
	});

	function reverse(s) {
	  return s.split('').reverse().join('');
	}

	// number format
	Number.prototype.format = function(n, x) {
		var re = '(\\d)(?=(\\d{' + (x || 3) + '})+' + (n > 0 ? '\\.' : '$') + ')';
		return this.toFixed(Math.max(0, ~~n)).replace(new RegExp(re, 'g'), '$1,');
	};

	// last game update
	socket.on('last-game', function(msg){

		$('.history .table-list .recent-l').eq(0).prepend('<div class="list"><div class="player">'+msg['login']+'</div><div class="bet">'+msg['amount']+' <i class="flaticon-ruble"></i></div><div class="profit'+(msg['profit'] > 0 ? ' win' : '')+'">'+msg['profit']+' <i class="flaticon-ruble"></i></div><div class="step">'+msg['level']+'</div><div class="difficult"><img src="/assets/images/'+msg['mode']+'-mode.svg"></div></div>');

		ptotalcount_i = parseInt($('.ptotalcount_i').text());
		ptotalamount_i = ($('.ptotalamount_i').html().replace(',',''));
		ptotalamount_i = parseFloat(ptotalamount_i.replace(',',''));
		ptotalamount_i = parseInt((ptotalamount_i+parseFloat(msg['amount'])).toFixed(0));

		$('.ptotalcount_i').html(ptotalcount_i+1);
		$('.ptotalamount_i').html(ptotalamount_i.format());

		$('.history .table-list div.list:last-child').remove();

		if(msg['users_online'] > 0) {
			$('.users_online span').html(msg['users_online']);
		}
	});

	// select bet value
	$('body').on('click','.game ul.list li.hover',function() {

		$('.game .loading').show();
		var this_li = $(this);
		var pos = $(this).attr('data-url').replace('pos_','').split('_');
		var level2  = parseInt(pos[0]);
		var cell = parseInt(pos[1]);

		socket.emit('setbet', {user: login , place: cell, level: level2});
		socket.on('setbet2', function(data){ //TODO once
			// if game over
			if(data.user == login){
			$('.game ul.list li.hover').removeClass('hover');
			if(data.status == 2) {
				  socket.emit('force2', {user: login});
				if(getCookie('sound') != 'off' && getMobileOperatingSystem() != 'iOS') {
					lost_sound.playclip();
				}
				var s = data.fields_seed;
				var fields_seeds = s;

				$('.game ul.list li').each(function() {
					var class_id = $(this).attr('data-url');
					var position = class_id.split('_');
					if(!class_id.match('game-over')) {
						if(fields_seeds[position[1] - 1]['steps'][position[2]-1] == 1) {
							$(this).addClass('icon');
							$(this).html('<img src="/assets/images/'+data.mode+'-mode.svg" />');
						}
					}
				});
				this_li.addClass('game-over');
				this_li.html('Game<br>Over');
				$('.arrow-step-left').hide();
				$('.arrow-step-right').hide();
				$('.game-end').html(lang_conf['game-end']);
					GameEnd(data.banka);
			} else {
				if(getCookie('sound') != 'off' && getMobileOperatingSystem() != 'iOS') {
					win_sound.playclip();
				}
				window.take = this_li.find('#mon').text();
				this_li.html('<img src="/assets/images/'+data.mode+'-mode.svg" />');
				this_li.addClass('icon');
					if(data.banka == 0){
				ActiveGame(data.new_level,1);
					}else{
										ActiveGame(data.new_level,data.mode);
					}

				if(data.game_bet_take > 0) {
							$('.game-end').html(lang_conf['game-take'].replace('#amount#',window.take));
				} else {
					$('.game-end').html(lang_conf['game-end']);
				}

				if(data.end_game == 1) {
						socket.emit('takemoney', {user: login});
						socket.emit('updateBalance', {user: login});
					smoke.alert('Превосходно! Вы достигли максимальной ступени. Пробуйте еще!', function(e){
						}, {
						ok: "ОК",
						cancel: "Nope",
						classname: "custom-class"
					});
				}
			}
			$('.game .loading').hide();
		}
		});

	});

	// sound off on
	$('.sound i').click(function() {
		status = 'on';
		if($(this).attr('class').match('-on')) {
			$(this).removeClass('flaticon-sound-on on');
			$(this).addClass('flaticon-sound-off');
			status = 'off';

			// background_sound.stopclip();

		} else {
			$(this).removeClass('flaticon-sound-off');
			$(this).addClass('flaticon-sound-on on');

			// background_sound.playclip();
		}
		document.cookie = 'sound='+status;
	});

	if(getCookie('sound') != 'off') {
		// background_sound.playclip();
	}


	// change game type
	if(getCookie('game-mode') == "" || getCookie('game-mode') == undefined || getCookie('game-mode') == "undefined") {
		document.cookie = 'game-mode=easy';
	}
	$('.game-type li').removeClass('active');
	$('.game-type li.it'+getCookie("game-mode")).addClass('active');

	if(PageName == 'main') {
		game_build();
	}
	$('.game-type li').click(function() {
		if(conf_vars['game-open'] == 1) {return;}
		if($(this).attr('class').match('not-allowed')) {return;}

		if($(this).attr('data-url') != $('.game-type li.active').attr('data-url')) {
			// set cookie
			document.cookie = 'game-mode='+$(this).attr('data-url');

			$('.game-type li').removeClass('active');
			$(this).addClass('active');
			socket.emit('change-mode', { user: conf_vars['logged-id'], token:conf_vars['user-token'], mode: $(this).attr('data-url')});
			game_build();

			socket.on('change-mode', function(msg){
				// alert(msg['rseed']);
				$('.TicketResponse span').html(msg['rseed']);
				$('.TicketResponse').show();

				if(msg['user'] == conf_vars['logged-id']) {
					// if not game
					if(msg['lgame'] == 0) {
						$('.verify-b .current .hash textarea').val($('.verify-b .next .hash textarea').val());
						$('.verify-b .current .client-seed textarea').val($('.verify-b .next .client-seed textarea').val());
					}
					$('.verify-b .next .hash textarea').val(msg['hash']);
					$('.verify-b .next .client-seed textarea').val(msg['clseed']);
				}
			});
		}
	});

	// bet amount controls
	$('.game .control .minus-icon').click(function() {
		var value = parseFloat($('input.betInp').val().replace('₽',''));
		if(value > conf_vars['min-bet']) {
			$('input.betInp').val('₽'+(value-conf_vars['min-bet']).toFixed(2));
			game_build();
		}
	});
	$('.game .control .plus-icon').click(function() {
		var value = parseFloat($('input.betInp').val().replace('₽',''));

		if(value > 1000) {

		} else {
				$('input.betInp').val('₽'+(value+1).toFixed(2));
				game_build();
		}
	});

	// hover and out close icons
	$( ".close-icon" ).hover(
	  function() {
	    $(this).addClass("close-icon-hover");
	  }, function() {
	    $(this).removeClass("close-icon-hover");
	  }
	);

	// deposit
	$('.deposit button').click(function() {
		$('#paymentModal').arcticmodal();
	});
	$('.deposit').click(function() {
		$('#paymentModal').arcticmodal();
	});
	// withdrawal
	$('.withdrawal button').click(function() {
		$('#withdrawModal').arcticmodal();
	});
	$('.withdrawal').click(function() {
			$('#withdrawModal').arcticmodal();
	});
	// free-money
	$('.free-money').click(function() {
		if(conf_vars['real-balance'] >= conf_vars['free-money']) {
			messageUI(400,180,lang_conf['free-denied']);
		} else {
			$(".freemoneyUI").subscribeBetter({
			  animation: "flyInUp",
			  delay: 0,
			  showOnce: false,
			  autoClose: false,
			  scrollableModal: false
			});
		}
	});
	$('body').on('click', '#paymentModal .sidebar-pay li', function(){
			$('#paymentModal .sidebar-pay li').removeClass('active');
			$(this).addClass('active');
			$('#paymentModal .box-pay form h3').text($(this).text());
			$('#paymentModal .box-pay form input[name="payment_system"]').val($(this).attr('data-value'));
		});


		$('body').on('click', '#paymentModal .box-pay form .price a', function(){
			$('#paymentModal .box-pay form input[name="sum"]').val($(this).attr('data-value'));
			return false;
		});
		$('body').on('click', '#withdrawModal .sidebar-pay li', function(){
		$('#withdrawModal .sidebar-pay li').removeClass('active');
		$(this).addClass('active');
		$('#withdrawModal .box-pay h3').text($(this).text());
		$('#withdrawModal .box-pay input[name="payment_system"]').val($(this).attr('data-value'));
	});

	$('body').on('click', '#withdrawModal button.withdraw', function(){
		var sum = $('#withdrawModal input[name="sum"]').val();
		var paymentSystem = $('#withdrawModal input[name="payment_system"]').val();
		var wallet = $('#withdrawModal input[name="wallet"]').val();
		if(wallet == '') {
			smoke.alert(lang_conf['wallet-empty'], function(e){
				}, {
				ok: "Cancel",
				cancel: "Nope",
				classname: "custom-class"
			});
			return;
		}
		if(sum < 50 || sum < 0){
			smoke.alert(lang_conf['with-min'], function(e){
				}, {
				ok: "Cancel",
				cancel: "Nope",
				classname: "custom-class"
			});
				return;
		}
		$.post('/vivod/'+sum+'/'+wallet,function(data) {
		res_text = 'Done!';
		if (data['status'] == 1) {
			res_text = lang_conf['withdrawal-success'];
				$.arcticmodal('close');
			socket.emit('updateBalance', {user: login});
		}else {
			res_text = data['message'];
		}
		smoke.alert(res_text, function(e){}, {
			ok: "Cancel",
			cancel: "Nope",
			classname: "custom-class"
		});
	}).done(function(){

	});

	});

	// settings popui
	$('.invite-friend').click(function() {
		$('#prof').arcticmodal();
		return false;
	});
	$('.staticUIa .affilate').click(function() {
		$('#prof').arcticmodal();
		return false;
	});

	$('.settings i').click(function() {
	$('#prof').arcticmodal();
		return false;
	});

	// static pages
	$('.staticUIa li a.about').click(function() {
		$(".aboutUI .text").slimScroll({
		    height: '460px',
		    size: '9px',
		    position: 'right',
		    color: 'rgb(69, 75, 105)',
		    alwaysVisible: true,
		    distance: '0px',
		    railVisible: true,
		    railColor: '#22273b',
		    railOpacity: 1,
		    wheelStep: 10,
		    allowPageScroll: false,
		    disableFadeOut: false
		});
		$(".aboutUI").subscribeBetter({
		  animation: "flyInUp",
		  delay: 0,
		  showOnce: false,
		  autoClose: false,
		  scrollableModal: false
		});

		return false;
	});

	// affilate
	$('.staticUIa li a.affilate').click(function() {
		$(".settingUI").subscribeBetter({
		  animation: "flyInUp",
		  delay: 0,
		  showOnce: false,
		  autoClose: false,
		  scrollableModal: false
		});

		return false;
	});

	// deposit or withdrawal payment method
	$('.payments ul li').click(function() {
		$(this).parent('ul').find('li').removeClass('selected');
		$(this).addClass('selected');
	});

    $("input.betInp,input.numberInp").keydown(function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
             // Allow: Ctrl+A, Command+A
            (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
             // Allow: home, end, left, right, down, up
            (e.keyCode >= 35 && e.keyCode <= 40)) {
                 // let it happen, don't do anything
                 return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    });

    /* game bet arrows */
    setInterval(function() {
		$('.arrow-step-left').addClass('hover');
		$('.arrow-step-right').addClass('hover');
		setTimeout(function() {
			$('.arrow-step-left').removeClass('hover');
			$('.arrow-step-right').removeClass('hover');
		}, 250);
    }, 500);

	/* history & wagered tabs */
	$('.history .tabs li').click(function() {
		HWTableBlock('history','h',this);
	});
	$('.wagered .tabs li').click(function() {
		HWTableBlock('wagered','w',this);
	});

	function getCookie(name) {
	  var matches = document.cookie.match(new RegExp(
	    "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
	  ));
	  return matches ? decodeURIComponent(matches[1]) : undefined;
	}

	function HWTableBlock(element,whs,e) {
		var tab_id = $(e).attr('data-id');
		$('.'+element+' .tabs li').removeClass('active');
		$(e).addClass('active');
		if(tab_id.match(whs+'-')) {
			$('.'+element+' .table-h').hide();
			$('[data-id="'+tab_id+'-top"]').show();

			$('.'+element+' .table-list .recent-l').hide();
			$('[data-id="'+tab_id+'-t"]').show();
		}
	}
	function PopupCenter(url, title, w, h) {
		// Fixes dual-screen position                         Most browsers      Firefox
		var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left;
		var dualScreenTop = window.screenTop != undefined ? window.screenTop : screen.top;

		var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
		var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;

		var left = ((width / 2) - (w / 2)) + dualScreenLeft;
		var top = ((height / 2) - (h / 2)) + dualScreenTop;
		var newWindow = window.open(url, title, 'scrollbars=yes, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);

		// Puts focus on the newWindow
		if (window.focus) {
			newWindow.focus();
		}
	}

	function messageUI(width,height,content) {
		$(".messageUI").width(width);
		$(".messageUI").height(height);
		$(".messageUI").css('margin-left','-'+(width / 2 - 30));
		$(".messageUI").css('margin-top','-'+(height / 2 - 30));

		$(".messageUI .text").html(content);

		$(".messageUI").subscribeBetter({
		  animation: "flyInUp",
		  delay: 0,
		  showOnce: false,
		  autoClose: false,
		  scrollableModal: false
		});
	}

	// balance(0.45,'plus');
	// balance(0.08,'minus');

	function balance(new_balance, action) {
		var balance = parseFloat($('.balance span').text());
		if(new_balance > 0) {
			if(action == 'replace') { balance = new_balance; }
			if(action == 'plus') { balance += new_balance; }
			if(action == 'minus') { balance -= new_balance; }

			$('.balance span').text(balance.toFixed(2));
		}
		return balance;
	}

	function game_build() {
		var type = $('.game li.active').attr('data-url');
		var g_passed = game_passed.split(',');
		var type_pos = 1;
		if(type == 'medium') { type_pos = 2; }
		if(type == 'hard') { type_pos = 3; }

		var value = parseFloat($('input.betInp').val().replace('₽',''));
		var game_data = '';
		if(game_bet_amount > 0) {
			value = game_bet_amount;
		}

		var amount_arr = {"easy":{1:0.014,2:0.022,3:0.032,4:0.048,5:0.072,6:0.107,7:0.159,8:0.236,9:0.351,10:0.521},
						  "medium":{1:0.019,2:0.039,3:0.077,4:0.152,5:0.30,6:0.593,7:1.172,8:2.314,9:4.571,10:9.29},
						  "hard":{1:0.029,2:0.088,3:0.261,4:0.778,5:2.31,6:6.863,7:20.384,8:60.54,9:179.807,10:534.08}};

		for(var i=10; i>=1; i--) {
			amount = 0;
			for(var j=1; j<=(type == 'medium' ? 2 : 3); j++) {
				amount = amount_arr[type][i]*(value / 0.01);
				// open

				g_passed_i = g_passed[i-1].split(':');
				if(conf_vars['game-open'] == 1 && g_passed_i[j-1] == 1) {
					game_data += '<li class="icon"><img src="/assets/images/'+type+'-mode.svg" /></li>';
				} else {
					game_data += '<li class="'+type+' lev_'+i+'" data-url="pos_'+i+'_'+j+'"><span class="flaticon-star"></span><div><i id="mon">'+amount.toFixed(0)+'</i>₽</div><span class="flaticon-star"></span></li>';
				}
			}
		}
		$('.game .list').html(game_data);
		$('.game .list').addClass('disabled');
		$('.game .arrow-step-left').hide();
		$('.game .arrow-step-right').hide();
	}

	/* wagered date filter */
	$('.wagered .date').click(function() {
		var elementI = '.wagered .date';
		if($(elementI+'-list').css('display') == 'none') {
			$(elementI).addClass('expanded');
			$(elementI+' i').removeClass('flaticon-arr-down');
			$(elementI+' i').addClass('flaticon-arr-top');
		} else {
			$(elementI).removeClass('expanded');
			$(elementI+' i').removeClass('flaticon-arr-top');
			$(elementI+' i').addClass('flaticon-arr-down');
		}
		$(elementI+'-list').slideToggle();
	});
	$('.wagered .date-list li').click(function() {
		$('.wagered .date span').html($(this).text());
		var date = $(this).attr('data-url');
		$('.table-list .tldate').hide();
		$('.table-list .'+date).show();
	});
	$('.lang-ui .langs li').click(function() {
			document.cookie = 'lang='+$(this).attr('data-url');
		location.href= '/'+$(this).attr('data-url');
		$('.lang-ui .lang-active span').html($(this).text());
		$('.lang-ui .langs').hide();
	});

	/* langs */
	$('.lang-active').click(function() {
		if($('.lang-ui .langs').css('display') == 'none') {
			$('.lang-active i').removeClass('flaticon-arr-down');
			$('.lang-active i').addClass('flaticon-arr-top');
		} else {
			$('.lang-active i').removeClass('flaticon-arr-top');
			$('.lang-active i').addClass('flaticon-arr-down');
		}
		$('.lang-ui .langs').slideToggle();
	});


	/* verify show&hide */
	$('.game .verify').click(function() {
		$(".verifyUI").subscribeBetter({
		  animation: "flyInUp",
		  delay: 0,
		  showOnce: false,
		  autoClose: false,
		  scrollableModal: false
		});

		$('.verifyUI .hash input').val($('.verify-b .current .hash textarea').val());
		$('.verifyUI .server input').val($('.verify-b .current .server-seed textarea').val());
		$('.verifyUI .number input').val($('.verify-b .current .number textarea').val());
		$('.verifyUI .return input').val($('.verify-b .current .result textarea').val());
	});

	/* wagered */
	$('#wallOfFameDropdown').click(function() {
		$(this).parent('.dropdown').find('.dropdown-menu').toggle();
	});

	/* deposit */
	$('.DepositBtn').click(function() {
		var err_text = '';
		var sum = parseFloat($('.depositInp_n').val());
		var payment2 = $('.depositUI li.selected').attr('data-url');
		var payment = payment2.split("freekassa:");
		if(sum > conf_vars['deposit-max']) {
			err_text = lang_conf['deposit-max-err'];
			$('.depositInp_n').val(conf_vars['deposit-max']);
		}
		if(sum < conf_vars['deposit-min']) {
			err_text = lang_conf['deposit-min-err'];
			$('.depositInp_n').val(conf_vars['deposit-min']);
		}
		if(payment == "") {
			err_text = lang_conf['deposit-method-err'];
		}

		if(err_text != '') {
			smoke.alert(err_text, function(e){
				}, {
				ok: "Cancel",
				cancel: "Nope",
				classname: "custom-class"
			});
		} else {
			$('.depositUI .submit .loading').show();

			$.post('/pay', 'inout=deposit&sum='+sum+'&payment='+payment, function(e) {

				if(e.url != null){
					window.location.href = e.url;
				}
			});
			return false;
		}
	});

	/* withdrawal */
	$('.WithdrawalBtn').click(function() {
		var err_text = '';
		var sum = parseFloat($('.withdrawalInp_n').val());
		var wallet = $('.withdrawalInp_w').val();
		var payment = $('.withdrawalUI li.selected').attr('data-url');

		if(wallet == '') {
			err_text = lang_conf['wallet-empty'];
		}
		if(sum < 50 || sum < 0){
				err_text = lang_conf['with-min'];
		}

		if(err_text != '') {
			smoke.alert(err_text, function(e){
				}, {
				ok: "Cancel",
				cancel: "Nope",
				classname: "custom-class"
			});
		} else {
			$('.withdrawalUI .submit .loading').show();

					$.post('/vivod/'+sum+'/'+wallet,function(data) {
					res_text = 'Unexpected error!';
					if (data['status'] == 1) {
						res_text = lang_conf['withdrawal-success'];
socket.emit('updateBalance', {user: login});
					}else {
						res_text = data['message'];
					}
					smoke.alert(res_text, function(e){}, {
						ok: "Cancel",
						cancel: "Nope",
						classname: "custom-class"
					});
				$('.withdrawalUI .submit .loading').hide();
				}).done(function(){

				});

			return false;
		}
	});

	/* free */
	$('.Freebtn').click(function() {
		$('.freemoneyUI .submit .loading').show();

		$.post('/api/free-money', 'key='+(new Date().getUTCMilliseconds()), function(e) {
			res_text = 'Бонус зачислен!';
			if(e.status == "false") {
				res_text = "Подождите " + e.hoursleft + " часов!";
			}
			if(e.status == "true") {
				res_text = "Бонус зачислен!";

			}

			smoke.alert(res_text, function(e){}, {
				ok: "ОК",
				cancel: "Nope",
				classname: "custom-class"
			});

			if(e.status == "true") {
				$.startTimer(28800);
			}

			$('.freemoneyUI .submit .loading').hide();

		});
	});

	if(PageName == 'support') {
		$('#ticket-file').on('change', UploadTicketFile);
	}
	function UploadTicketFile(event) {
		var loader = $("#ticket-form-loader");
		var files = event.target.files;

		var formdata = new FormData();

		$.each(files, function(key, value) {
			formdata.append(key, value);
		});

		loader.fadeIn(0);

		$.ajax({
			url: '?page_load=ajax&url=/ajax/tickets_files.php',
			type: 'POST',
			data: formdata,
			cache: false,
			dataType: 'json',
			processData: false,
			contentType: false,
			success: function(data, textStatus, jqXHR) {
				if(data.status == 1) {
					$("#ticket-file-area").html("<p><span class='flaticon-check'></span>{#lng_default_support_text16}</p>");
				}
				else {
					smoke.alert('<h3>ERRORS</h3>' + data.message);
				}
				loader.fadeOut(0);
			},
			error: function(jqXHR, textStatus, errorThrown) {

				loader.fadeOut(0);
			}
		});
	}
});

function TicketPage(id) {
	window.location="/support/"+id+"/";
}

function CreateTicket(form) {
	var getForm = 'form[name="'+form+'"]';
	var getData = $( getForm ).serialize()+'&act=new';

	$(getForm+' .loading').fadeIn(100);

	$.post("/api/tickets", getData ,function(data) {
		data = JSON.parse(data);

		/* success */
		if (data['status'] == 1) {
			smoke.alert(data['message']);
			$(getForm).html(data['message']);
		}
		/* error */
		else {
			smoke.alert(data['message']);
		}

	}).done(function(){
		$(getForm+' .loading').fadeOut(1000);
	});
}


function DiscussTicket(form, id) {
	var getForm = 'form[name="'+form+'"]';
	var getData = $( getForm ).serialize()+'&act=new&id='+id;

	$(getForm+' .loading').fadeIn(100);

	$.post("?page_load=ajax&url=/ajax/tickets.ajax", getData ,function(data) {
		data = JSON.parse(data);

		/* success */
		if (data['status'] == 1) {
			smoke.alert(data['message']);
			TicketPage(id);
		}
		/* error */
		else {
			smoke.alert(data['message']);
		}

	}).done(function(){
		$(getForm+' .loading').fadeOut(1000);
	});
}








(function (window) {
{
	var unknown = '-';

	// screen
	var screenSize = '';
	if (screen.width) {
		width = (screen.width) ? screen.width : '';
		height = (screen.height) ? screen.height : '';
		screenSize += '' + width + " x " + height;
	}

	// browser
	var nVer = navigator.appVersion;
	var nAgt = navigator.userAgent;
	var browser = navigator.appName;
	var version = '' + parseFloat(navigator.appVersion);
	var majorVersion = parseInt(navigator.appVersion, 10);
	var nameOffset, verOffset, ix;

	// Opera
	if ((verOffset = nAgt.indexOf('Opera')) != -1) {
		browser = 'Opera';
		version = nAgt.substring(verOffset + 6);
		if ((verOffset = nAgt.indexOf('Version')) != -1) {
			version = nAgt.substring(verOffset + 8);
		}
	}
	// Opera Next
	if ((verOffset = nAgt.indexOf('OPR')) != -1) {
		browser = 'Opera';
		version = nAgt.substring(verOffset + 4);
	}
	// Edge
	else if ((verOffset = nAgt.indexOf('Edge')) != -1) {
		browser = 'Microsoft Edge';
		version = nAgt.substring(verOffset + 5);
	}
	// MSIE
	else if ((verOffset = nAgt.indexOf('MSIE')) != -1) {
		browser = 'Microsoft Internet Explorer';
		version = nAgt.substring(verOffset + 5);
	}
	// Chrome
	else if ((verOffset = nAgt.indexOf('Chrome')) != -1) {
		browser = 'Chrome';
		version = nAgt.substring(verOffset + 7);
	}
	// Safari
	else if ((verOffset = nAgt.indexOf('Safari')) != -1) {
		browser = 'Safari';
		version = nAgt.substring(verOffset + 7);
		if ((verOffset = nAgt.indexOf('Version')) != -1) {
			version = nAgt.substring(verOffset + 8);
		}
	}
	// Firefox
	else if ((verOffset = nAgt.indexOf('Firefox')) != -1) {
		browser = 'Firefox';
		version = nAgt.substring(verOffset + 8);
	}
	// MSIE 11+
	else if (nAgt.indexOf('Trident/') != -1) {
		browser = 'Microsoft Internet Explorer';
		version = nAgt.substring(nAgt.indexOf('rv:') + 3);
	}
	// Other browsers
	else if ((nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))) {
		browser = nAgt.substring(nameOffset, verOffset);
		version = nAgt.substring(verOffset + 1);
		if (browser.toLowerCase() == browser.toUpperCase()) {
			browser = navigator.appName;
		}
	}
	// trim the version string
	if ((ix = version.indexOf(';')) != -1) version = version.substring(0, ix);
	if ((ix = version.indexOf(' ')) != -1) version = version.substring(0, ix);
	if ((ix = version.indexOf(')')) != -1) version = version.substring(0, ix);

	majorVersion = parseInt('' + version, 10);
	if (isNaN(majorVersion)) {
		version = '' + parseFloat(navigator.appVersion);
		majorVersion = parseInt(navigator.appVersion, 10);
	}

	// mobile version
	var mobile = /Mobile|mini|Fennec|Android|iP(ad|od|hone)/.test(nVer);

	// cookie
	var cookieEnabled = (navigator.cookieEnabled) ? true : false;

	if (typeof navigator.cookieEnabled == 'undefined' && !cookieEnabled) {
		document.cookie = 'testcookie';
		cookieEnabled = (document.cookie.indexOf('testcookie') != -1) ? true : false;
	}

	// system
	var os = unknown;
	var clientStrings = [
		{s:'Windows 10', r:/(Windows 10.0|Windows NT 10.0)/},
		{s:'Windows 8.1', r:/(Windows 8.1|Windows NT 6.3)/},
		{s:'Windows 8', r:/(Windows 8|Windows NT 6.2)/},
		{s:'Windows 7', r:/(Windows 7|Windows NT 6.1)/},
		{s:'Windows Vista', r:/Windows NT 6.0/},
		{s:'Windows Server 2003', r:/Windows NT 5.2/},
		{s:'Windows XP', r:/(Windows NT 5.1|Windows XP)/},
		{s:'Windows 2000', r:/(Windows NT 5.0|Windows 2000)/},
		{s:'Windows ME', r:/(Win 9x 4.90|Windows ME)/},
		{s:'Windows 98', r:/(Windows 98|Win98)/},
		{s:'Windows 95', r:/(Windows 95|Win95|Windows_95)/},
		{s:'Windows NT 4.0', r:/(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/},
		{s:'Windows CE', r:/Windows CE/},
		{s:'Windows 3.11', r:/Win16/},
		{s:'Android', r:/Android/},
		{s:'Open BSD', r:/OpenBSD/},
		{s:'Sun OS', r:/SunOS/},
		{s:'Linux', r:/(Linux|X11)/},
		{s:'iOS', r:/(iPhone|iPad|iPod)/},
		{s:'Mac OS X', r:/Mac OS X/},
		{s:'Mac OS', r:/(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/},
		{s:'QNX', r:/QNX/},
		{s:'UNIX', r:/UNIX/},
		{s:'BeOS', r:/BeOS/},
		{s:'OS/2', r:/OS\/2/},
		{s:'Search Bot', r:/(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\/Teoma|ia_archiver)/}
	];
	for (var id in clientStrings) {
		var cs = clientStrings[id];
		if (cs.r.test(nAgt)) {
			os = cs.s;
			break;
		}
	}

	var osVersion = unknown;

	if (/Windows/.test(os)) {
		osVersion = /Windows (.*)/.exec(os)[1];
		os = 'Windows';
	}

	switch (os) {
		case 'Mac OS X':
			osVersion = /Mac OS X (10[\.\_\d]+)/.exec(nAgt)[1];
			break;

		case 'Android':
			osVersion = /Android ([\.\_\d]+)/.exec(nAgt)[1];
			break;

		case 'iOS':
			osVersion = /OS (\d+)_(\d+)_?(\d+)?/.exec(nVer);
			osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0);
			break;
	}

	// flash (you'll need to include swfobject)
	/* script src="//ajax.googleapis.com/ajax/libs/swfobject/2.2/swfobject.js" */
	var flashVersion = 'no check';
	if (typeof swfobject != 'undefined') {
		var fv = swfobject.getFlashPlayerVersion();
		if (fv.major > 0) {
			flashVersion = fv.major + '.' + fv.minor + ' r' + fv.release;
		}
		else  {
			flashVersion = unknown;
		}
	}
}

window.jscd = {
	screen: screenSize,
	browser: browser,
	browserVersion: version,
	browserMajorVersion: majorVersion,
	mobile: mobile,
	os: os,
	osVersion: osVersion,
	cookies: cookieEnabled,
	flashVersion: flashVersion
};
}(this));

/*
alert(
	'OS: ' + jscd.os +' '+ jscd.osVersion + '\n' +
	'Browser: ' + jscd.browser +' '+ jscd.browserMajorVersion +
	  ' (' + jscd.browserVersion + ')\n' +
	'Mobile: ' + jscd.mobile + '\n' +
	'Flash: ' + jscd.flashVersion + '\n' +
	'Cookies: ' + jscd.cookies + '\n' +
	'Screen Size: ' + jscd.screen + '\n\n' +
	'Full User Agent: ' + navigator.userAgent
);
*/

var audiotypes={
    "mp3": "audio/mpeg",
    "mp4": "audio/mp4",
    "ogg": "audio/ogg",
    "wav": "audio/wav"
}

function ss_soundbits(sound){
    var audio_element = document.createElement('audio')
    if (audio_element.canPlayType){
        for (var i=0; i<arguments.length; i++){
            var source_element = document.createElement('source')
            source_element.setAttribute('src', arguments[i])
            if (arguments[i].match(/\.(\w+)$/i))
                source_element.setAttribute('type', audiotypes[RegExp.$1])
            audio_element.appendChild(source_element)
        }
        audio_element.load()
        audio_element.playclip=function(){
            audio_element.pause()
            audio_element.currentTime=0
            audio_element.play()
        }
        audio_element.stopclip=function(){
            audio_element.pause()
            audio_element.currentTime=0
        }
        return audio_element
    }
}

function terms_show() {
	$(".termsUI .text").slimScroll({
		height: '460px',
		size: '9px',
		position: 'right',
		color: 'rgb(69, 75, 105)',
		alwaysVisible: true,
		distance: '0px',
		railVisible: true,
		railColor: '#22273b',
		railOpacity: 1,
		wheelStep: 10,
		allowPageScroll: false,
		disableFadeOut: false
	});
	$(".termsUI").subscribeBetter({
	  animation: "flyInUp",
	  delay: 0,
	  showOnce: false,
	  autoClose: false,
	  scrollableModal: false
	});

	return false;
}
